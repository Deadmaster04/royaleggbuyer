-- Set these to the actual names of the source and destination house models:
local sourceHouseName = "iuRMUykChxY" -- The house you want to copy FROM
local destinationHouseName = "ScarletShifter8835" -- Your house (copy TO)

local houseInteriors = workspace:FindFirstChild("HouseInteriors")
if not houseInteriors then warn("HouseInteriors folder not found!") return end

local blueprint = houseInteriors:FindFirstChild("blueprint")
if not blueprint then warn("blueprint folder not found!") return end

local sourceHouse = blueprint:FindFirstChild(sourceHouseName)
if not sourceHouse then warn("Source house not found!") return end

local destinationHouse = blueprint:FindFirstChild(destinationHouseName)
if not destinationHouse then warn("Destination house not found!") return end

-- We'll spread out the furniture in the destination house
local startPosition = destinationHouse:GetPivot().Position
local offset = Vector3.new(6, 0, 0)
local i = 0

-- Recursive function to find all Models inside a folder
local function findAllModels(folder, models)
    for _, obj in ipairs(folder:GetChildren()) do
        if obj:IsA("Model") then
            table.insert(models, obj)
        elseif obj:IsA("Folder") then
            findAllModels(obj, models)
        end
    end
end

-- Find all models in the source house
local modelsToCopy = {}
findAllModels(sourceHouse, modelsToCopy)

if #modelsToCopy == 0 then
    warn("No models found in the source house!")
    return
end

for _, model in ipairs(modelsToCopy) do
    local clone = model:Clone()
    clone.Parent = destinationHouse
    -- Set PrimaryPart if not set
    if not clone.PrimaryPart then
        local primary = clone:FindFirstChildWhichIsA("BasePart")
        if primary then
            clone.PrimaryPart = primary
        end
    end
    -- Place the clone at a new position
    if clone.PrimaryPart then
        clone:SetPrimaryPartCFrame(CFrame.new(startPosition + offset * i))
        clone.PrimaryPart.Anchored = true
        print("Placed cloned model", clone.Name, "at", (startPosition + offset * i))
        i = i + 1
    else
        print("Could not place cloned model", clone.Name, "because it has no PrimaryPart")
    end
end

print("Copied", #modelsToCopy, "models from", sourceHouseName, "to", destinationHouseName)
