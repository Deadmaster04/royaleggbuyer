-- Set these to the correct names:
local sourceFurnitureRoot = workspace.HouseInteriors.furniture:FindFirstChild("iuRMUykChxY")
local destinationHouseName = "YOUR_HOUSE_NAME" -- Change to your actual house model name

if not sourceFurnitureRoot then
    warn("Source furniture root not found!")
    return
end

-- Find your house model
local blueprint = workspace.HouseInteriors:FindFirstChild("blueprint")
if not blueprint then
    warn("blueprint folder not found!")
    return
end

local destinationHouse = blueprint:FindFirstChild(destinationHouseName)
if not destinationHouse then
    warn("Destination house not found!")
    return
end

-- Find all furniture models in all nested f-# folders
local function collectFurnitureModels(folder, models)
    for _, obj in ipairs(folder:GetChildren()) do
        if obj:IsA("Model") then
            table.insert(models, obj)
        elseif obj:IsA("Folder") then
            collectFurnitureModels(obj, models)
        end
    end
end

local modelsToCopy = {}
collectFurnitureModels(sourceFurnitureRoot, modelsToCopy)

if #modelsToCopy == 0 then
    warn("No furniture models found to copy!")
    return
end

-- Place them in a row in your house
local startPosition = destinationHouse:GetPivot().Position
local offset = Vector3.new(6, 0, 0)
local i = 0

for _, model in ipairs(modelsToCopy) do
    local clone = model:Clone()
    clone.Parent = destinationHouse
    if not clone.PrimaryPart then
        local primary = clone:FindFirstChildWhichIsA("BasePart")
        if primary then
            clone.PrimaryPart = primary
        end
    end
    if clone.PrimaryPart then
        clone:SetPrimaryPartCFrame(CFrame.new(startPosition + offset * i))
        clone.PrimaryPart.Anchored = true
        print("Placed furniture:", clone.Name, "at", (startPosition + offset * i))
        i = i + 1
    else
        print("Could not place", clone.Name, "because it has no PrimaryPart")
    end
end

print("Copied", #modelsToCopy, "furniture models from iuRMUykChxY to", destinationHouseName)
