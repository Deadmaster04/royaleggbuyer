local houseInteriors = workspace:FindFirstChild("HouseInteriors")
if not houseInteriors then
    warn("HouseInteriors folder not found!")
    return
end

local sourceFolder = houseInteriors:FindFirstChild("furniture")
if not sourceFolder then
    warn("furniture folder not found!")
    return
end

local blueprint = houseInteriors:FindFirstChild("blueprint")
if not blueprint then
    warn("blueprint folder not found!")
    return
end

local myHouse = blueprint:FindFirstChild("ScarletShifter8835")
if not myHouse then
    warn("Your house was not found!")
    return
end

local startPosition = Vector3.new(0, 5, 0)
local offset = Vector3.new(6, 0, 0)
local i = 0

-- Recursively find all Models and Parts in all subfolders
local function findAllItems(folder, items)
    for _, obj in ipairs(folder:GetChildren()) do
        if obj:IsA("Model") or obj:IsA("BasePart") then
            table.insert(items, obj)
        elseif obj:IsA("Folder") then
            findAllItems(obj, items)
        end
    end
end

local itemsToMove = {}
findAllItems(sourceFolder, itemsToMove)

if #itemsToMove == 0 then
    warn("No models or parts found in furniture folder or its subfolders!")
    return
end

for _, item in ipairs(itemsToMove) do
    item.Parent = myHouse
    if item:IsA("Model") then
        if not item.PrimaryPart then
            local primary = item:FindFirstChildWhichIsA("BasePart")
            if primary then
                item.PrimaryPart = primary
            end
        end
        if item.PrimaryPart then
            item:SetPrimaryPartCFrame(CFrame.new(startPosition + offset * i))
            item.PrimaryPart.Anchored = true
            print("Placed model", item.Name, "at", (startPosition + offset * i))
            i = i + 1
        else
            print("Could not place model", item.Name, "because it has no PrimaryPart")
        end
    elseif item:IsA("BasePart") then
        item.Position = startPosition + offset * i
        item.Anchored = true
        print("Placed part", item.Name, "at", (startPosition + offset * i))
        i = i + 1
    end
end

print("Placed", #itemsToMove, "items in your house!")
