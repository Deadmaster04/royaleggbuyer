local function rename(remotename, hashedremote)
    hashedremote.Name = remotename
end

local AC_MODULE = game:GetService("ReplicatedStorage").ClientModules.Core.RouterClient.RouterClient
local initFunction = require(AC_MODULE).init
local upvalueTable = getupvalue(initFunction, 7)

if type(upvalueTable) == "table" then
    table.foreach(upvalueTable, rename)
else
    print("patch rip")
end

-- Add inventory synchronization
local Fsys = require(game:GetService("ReplicatedStorage"):WaitForChild("Fsys")).load
local function sync_inventory()
    Fsys("RouterClient").get("Inventory/UpdateInventory")({
        force = true,
        inventory_type = "gifts"
    })
end

local args = {
    "gifts",
    "spring_2025_kaijunior_box",
    {
        buy_count = 1
    }
}

local ShopAPI = game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("ShopAPI/BuyItem")

-- Purchase loop with synchronization
while true do
    local success, result = pcall(function()
        return ShopAPI:InvokeServer(unpack(args))
    end)
    
    if not success or (result and result == false) then
        break
    end
    sync_inventory()  -- Update inventory after each purchase
    task.wait(0.3)    -- Add short delay between purchases
end

-- Wait and sync before opening
task.wait(1.5)
sync_inventory()
task.wait(0.5)

local function open_all_kaijunior_boxes()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local API = ReplicatedStorage.API
    local player = game:GetService("Players").LocalPlayer

    local player_inventory = Fsys("ClientData").get("inventory")
    local gifts = player_inventory.gifts

    local found = false
    for _, gift in pairs(gifts) do
        if gift.id == "spring_2025_kaijunior_box" then  -- Fixed ID match
            found = true
            local giftId = gift.unique
            print("Opening kaijunior box with unique ID:", giftId)

            -- Equip with delay
            API["ToolAPI/Equip"]:InvokeServer(
                giftId,
                {use_sound_delay = true, equip_as_last = false}
            )
            task.wait(0.35)  -- Increased equip delay

            -- Open with confirmation
            API["ShopAPI/OpenGift"]:InvokeServer(giftId)
            task.wait(0.6)   -- Reduced but safer opening delay
            
            sync_inventory() -- Update inventory after opening
            task.wait(0.25)  -- Short pause between operations
        end
    end

    if not found then
        print("No spring_2025_kaijunior_box found in inventory!")
    end
end

open_all_kaijunior_boxes()
